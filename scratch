const express = require('express');
const app = express();
const path = require('path');
const ytdl = require('ytdl-core');
const { spawn } = require('child_process');

let playing = false;
let queue = [];

app.use(express.static(path.join(__dirname, 'public')));

app.get('/stream', async (req, res) => {
        console.log(`Requested: ${req.query.url}`);
        try {
                const videoUrl = req.query.url;
                streamYoutubeAudio(videoUrl);

                res.json({ playing: playing });
        } catch (error) {
                res.status(500).json({ error: 'An error occurred while fetching video.' });
        }
});

const PORT = process.env.PORT || 8000;
app.listen(PORT, () => {
        console.log(`Server is running on port ${PORT}`);
});

const streamYoutubeAudio = async (url) => {
        if (playing) {
                queue.push(url);
                console.log(`Queued ${url}`);
                return;
        }
        try {
                const audioStream = ytdl(url, { filter: 'audioonly' });
                const mpv = spawn('mpv', ['-']);
                playing = true;
                console.log(`Now playing: ${url}`);
                setTimeout(() => {
                        audioStream.pipe(mpv.stdin, {end: true, highWaterMark: 64 * 1024 });
                }, 3000);

                mpv.on('close', (code) => {
                        console.log(`mpv process exited with code ${code}`);
                        playing = false;
                        if (queue.length > 0) {
                                streamYoutubeAudio(queue.shift());
                        }
                });
                mpv.on('error', (err) => {
                        //throw(err);
                        console.log(`Error with mpv ${err}`);
                });
        } catch (error) {
                console.log("Error streaming: " + error);
                playing = false;
        }
};
